# Use a Node.js image to build the app
FROM node:23-alpine AS build-stage

# Set the working directory
WORKDIR /app

# Copy the package.json and package-lock.json to install dependencies
COPY ./package*.json ./

# Install dependencies
RUN npm install --ignore-scripts

# Copy only necessary files for the build
COPY ./src ./src
COPY ./public ./public
COPY ./vite.config.js ./
COPY ./tailwind.config.js ./
COPY ./index.html ./

# Build the Vue.js app for production
RUN npm run build -- --mode prod

# Use an official Nginx image to serve the app
FROM nginx:stable-alpine-slim AS production-stage

# Install envsubst for environment variable substitution
RUN apk add --no-cache gettext

# Copy the built files from the build stage into the Nginx container
COPY --from=build-stage /app/dist /usr/share/nginx/html

# Copy nginx config template
COPY ./docker/nginx.conf /etc/nginx/templates/default.conf.template

# Create the static directory and set proper permissions
RUN mkdir -p /app/static && \
    chown -R nginx:nginx /app/static && \
    chmod -R 755 /app/static

# Create entrypoint script to substitute variables and start nginx
RUN echo '#!/bin/sh' > /docker-entrypoint.sh && \
    echo 'envsubst "\\$SERVER_NAME \\$BACKEND_HOST \\$BACKEND_PORT" < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf' >> /docker-entrypoint.sh && \
    echo 'exec nginx -g "daemon off;"' >> /docker-entrypoint.sh && \
    chmod +x /docker-entrypoint.sh

# Expose port 80
EXPOSE 80

CMD ["/docker-entrypoint.sh"]