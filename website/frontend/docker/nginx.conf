# Rate limiting zone: 60 requests per minute per IP
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=20r/s;

server {
    listen 80;
    listen [::]:80;

    server_name ${SERVER_NAME};

    location /api/ {
        # Apply the rate limit to /api/ requests.
        # burst=10 allows short bursts; nodelay rejects excess requests immediately.
        limit_req zone=api_limit burst=50 nodelay;

        # Proxy API requests to the backend server.
        proxy_pass http://${BACKEND_HOST}:${BACKEND_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Custom error page for 429 Too Many Requests
        error_page 429 =429 /rate_limit_exceeded.html;
    }

    # Serve static media files (videos, images, etc.)
    location /static/ {
        alias /app/static/;
        
        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
        add_header Access-Control-Allow-Headers 'Range';
        
        # Simple caching - browser handles expiration automatically
        expires 30d;
        add_header Cache-Control "public";
        add_header Accept-Ranges bytes;
        
        # Enable ETag for automatic change detection
        etag on;
    }

    # Internal location for custom 429 error page (not accessible directly)
    location = /rate_limit_exceeded.html {
        internal;
        default_type text/html;
        return 429 '<html><body><h1>Too Many Requests</h1><p>Please try again later.</p></body></html>';
    }

    # Serve static frontend files and fallback to index.html for SPA routing
    location / {
        root   /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # Access and error log locations
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}